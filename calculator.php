<?php
include(__DIR__.'/classes/classResistor.php');
include(__DIR__.'/classes/classGenerator.php');
include(__DIR__.'/classes/classConfiguration.php');
include(__DIR__.'/classes/classValidator.php');
include(__DIR__.'/classes/classResults.php');

$folder = str_replace(array('\\','//'),'/',__DIR__.'/');
$ret = @mkdir($folder.'cache');
file_put_contents($folder.'cache'.'/readme.txt','These files are automatically generated by the calculator. You can delete them if you wish.');

$cfg = new Configuration();
$cfg->loadParameters();
$cfg->validateParameters();
$cfg->displayParameters();
if ($cfg->get('value')==0) $cfg->displayHelp();

$res = new Resistor();
$res->loadResistors($cfg->get('e'),$cfg->get('min'),$cfg->get('max'));
$res->arrangeResistors($cfg->get('value'));

$resCount = $res->count();
echo "resistors=".$resCount; if ($resCount>256) echo " (using closest 255 unique resistors)";
echo "\n";
if ($resCount<1) die('Not enough resistors to work with. Relax your min and max parameters or choose a higher range.');

$results = new Results($cfg->get('value'),$cfg->get('results'));

$validator = new Validator($cfg,$res,$results);
echo "\n";

$gen = new ResultGenerator();

$resistorGroups = $cfg->get('count');
//for ($resistorGroup = $resistorGroups; $resistorGroup>1;$resistorGroup--) {
for ($resistorGroup = 2; $resistorGroup<=$resistorGroups;$resistorGroup++) {
    echo "Working on results with ".$resistorGroup." groups of resistors\n";
    $maxResistors = ($resCount>255) ? 255 : $resCount; 
    if ($resistorGroup==4) $maxResistors = ($maxResistors>64) ? 64 : $maxResistors;
    $gen->reset();
    $gen->generate($resistorGroup,$maxResistors);
    $resultCount = $gen->count();
    if ($resultCount>0) {
        $prevTick = 0;
        $currTick = 0;
        $percent2 = $resultCount/50;
        for ($i=0;$i<$resultCount;$i++) {
            $currTick = round($i / $percent2,0);
            if ($currTick>$prevTick) { echo '.';$prevTick=$currTick;}
            $validator->checkCombination($gen->get($i));
        }
        echo "\n";
    }
    echo "\nResults so far: ".$results->count()."\n\n";
    //$results->sortResults();
}
echo "Sorting results... ";
$results->sortResults();
echo " Done.\n\n";
$resultsShow = $cfg->get('results');
 
$value = $cfg->get('value');
$valuePercent = $value/100;

if ($results->count()<$resultsShow) $resultsShow = $results->count();
if ($cfg->get('group')==0) {
    for ($i=0;$i<$resultsShow;$i++) {
        $r = $results->get($i);
        showResult($r);
    }
} else {
    for ($j=2;$j<=$resistorGroups;$j++) {
        for ($i=0;$i<$resultsShow;$i++) {
            $r = $results->get($i);
            if ($r[2]==$j) showResult($r);
        }
    }
}

echo "Exporting results to TXT files...\n";

for ($j=2;$j<=$resistorGroups;$j++) {
    $hOut = fopen($folder.'/results_'.$j.'.csv','wb');
    $ret = fwrite($hOut,"Count\tResult\tDeviation\tPercentage\tMode\tGroup 1 Count\tGroup 1 Mode\tGroup 1 Value\tGroup 2 Count\tGroup 2 Mode\tGroup 2 Value\tGroup 3 Count\tGroup 3 Mode\tGroup 3 Value\tGroup 4 Count\tGroup 4 Mode\tGroup 4 Value\n");
    for ($i=0;$i<$resultsShow;$i++) {
        $r = $results->get($i);
        if ($r[2]==$j) fwrite($hOut,printResult($r));
    }
    fclose($hOut);
}
echo "Done.\n";


function printResult($r) {
    global $value,$valuePercent;
    $deviation = round($r[0]-$value,3);
    $deviationPercentage = round($deviation/$valuePercent,3);
    $text = $r[2]."\t".$r[0]."\t".$deviation."\t".$deviationPercentage."\t";
    $mainMode = "Sum";
    if (strpos($r[1],'+')!==FALSE) $mainMode = "Sum";
    if (strpos($r[1],'|')!==FALSE) $mainMode = "Parallel";
    $text .= $mainMode."\t";
    $line = str_replace(array('+','|'),',',$r[1]);
    $elements = explode(',',$line);
    foreach ($elements as $idx=>$element) {
        $el = trim($element);
        $elCount=1;
        $elMode ='s';
        $elValue = $el;
        if (substr($el,1,1)=='s') { $elCount = substr($el,0,1); $elMode='s'; $elValue = substr($el,2); }
        if (substr($el,1,1)=='p') { $elCount = substr($el,0,1); $elMode='p'; $elValue = substr($el,2); }
        $text .= $elCount."\t".$elMode."\t".$elValue."\t";
    }
    return trim($text,"\t")."\n";
}

function showResult($r) {
    global $value, $valuePercent;
    $diff = $r[0]-$value; if ($diff<0) $diff = 0-$diff;
    $diff = round($diff / $valuePercent,3); 
    $diffs = ''.$diff;
    if ($diff==0) $diffs='0.000';
    if ($diff<10) $diffs = '  '.$diffs;
    if ($diff<100) $diffs = ' '.$diffs;
    if (strpos($diffs,'.')===FALSE) $diffs .='.';
    $diffs = str_pad($diffs,8,'0',STR_PAD_RIGHT);
    echo $r[2].' '.str_pad($r[0],10,' ',STR_PAD_LEFT).' '.$diffs.'% '.$r[1]."\n";
}



?>